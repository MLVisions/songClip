% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plot-wave-channel.R
\name{add_play_tracker_line}
\alias{add_play_tracker_line}
\alias{toggle_loop_trackers}
\title{Add vertical line to \code{plotly} object to track current play time}
\usage{
add_play_tracker_line(
  pl_plotly = NULL,
  x_val = 0,
  proxy = NULL,
  x_axis = c("numeric", "Date"),
  color = "red",
  shapeId = "redTrackerLine"
)

toggle_loop_trackers(
  pl_plotly = NULL,
  toggle = TRUE,
  proxy = NULL,
  channel_type = c("left", "right", "stereo"),
  x_range = c(0, 3.36),
  y_val = -32768,
  shapeId = "loopTrackers"
)
}
\arguments{
\item{pl_plotly}{a \code{plotly} object. Only one of \code{proxy}, \code{pl_plotly} should be supplied.}

\item{x_val}{x-axis coordinate for placing the vertical line.}

\item{proxy}{a \code{\link{plotlyProxy}} object used for updating the location of the tracker.
Only one of \code{proxy}, \code{pl_plotly} should be supplied.}

\item{x_axis}{which x-axis to add the tracker to.}

\item{color}{color of the play tracker line}

\item{shapeId}{id of the shape to be tracked. Required for updating the location.}

\item{toggle}{Logical (\code{TRUE}/\code{FALSE}). If \code{TRUE}, add loop trackers. If \code{FALSE},
remove them if they exist.}

\item{x_range}{starting x-axis values for the loop tracker}

\item{y_val}{Y-axis value for the loop trackers. Should be the minimum of the
y-axis range}
}
\description{
Add vertical line to \code{plotly} returned from \code{\link{plot_wave_audio}}, to track
current play time. This function can also be used to update its underlying data inside
a shiny app by supplying a \code{\link{plotlyProxy}} object instead of \code{pl_plotly}.
}
\note{
\code{add_play_tracker_line} will \emph{not} work with 'stereo' outputs of \code{\link{plot_wave_audio}}
}
\examples{
# Read in audio file with `tuneR`
audio_obj <- tuneR::readMP3(file.path(EXAMPLE_AUDIO_DIR, "flowers.mp3"))

# Process wave file
wave_channel <- process_wave_channel(audio_obj)
pl_plotly <- plot_wave_channel_fancy(
               audio_data = wave_channel$audio_data,
               audio_params = wave_channel$params
             )

## Add tracker ##
# 1 min (numeric scale is in minutes)
pl_plotly \%>\% add_play_tracker_line(1)

# 1 min (date formatting function takes in seconds)
pl_plotly \%>\% add_play_tracker_line(60, x_axis = "Date")

## Add loop trackers ##
pl_plotly \%>\% toggle_loop_trackers(x_range = c(0, 3.36), y_val = -32768)

}
\keyword{internal}
