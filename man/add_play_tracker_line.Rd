% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plot-wave-channel.R
\name{add_play_tracker_line}
\alias{add_play_tracker_line}
\title{Add vertical line to \code{plotly} object to track current play time}
\usage{
add_play_tracker_line(
  pl_plotly = NULL,
  proxy = NULL,
  x_val = 0,
  color = "red",
  shapeId = "redTrackerLine"
)
}
\arguments{
\item{pl_plotly}{a \code{plotly} object. Only one of \code{proxy}, \code{pl_plotly} should be supplied.}

\item{proxy}{a \code{\link{plotlyProxy}} object used for updating the location of the tracker.
Only one of \code{proxy}, \code{pl_plotly} should be supplied.}

\item{x_val}{x-axis coordinate for placing the vertical line.}

\item{color}{color of line}

\item{shapeId}{id of the shape to be tracked. Required for updating the location.}
}
\description{
Add vertical line to \code{plotly} returned from \code{\link{plot_wave_audio}}, to track
current play time. This function can also be used to update its underlying data inside
a shiny app by supplying a \code{\link{plotlyProxy}} object instead of \code{pl_plotly}.
}
\examples{
# Read in audio file with `tuneR`
audio_obj <- tuneR::readMP3(file.path(EXAMPLE_AUDIO_DIR, "flowers.mp3"))

# Add tracker
pl_plotly <- plot_wave_audio(audio_obj) \%>\%
    add_play_tracker_line(0.3)


}
\keyword{internal}
